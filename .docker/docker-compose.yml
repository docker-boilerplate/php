version: '3.8'

networks:
  network:
   name: ${COMPOSE_PROJECT_NAME}-docker

volumes:
#  mysql:
#    name:  ${COMPOSE_PROJECT_NAME}-mysql-${ENV?}
#  elasticsearch-data:
#    name:  ${COMPOSE_PROJECT_NAME}-elasticsearch-data-${ENV?}
  mariadbsql:
    name: ${COMPOSE_PROJECT_NAME}-mariadb-${ENV?}

services:
#
#  Php interpreter
#
  php-fpm:
    build:
      dockerfile: images/php/php-fpm/Dockerfile
      args:
        USER_ID_HOST: ${USER_ID_HOST}
        GROUP_ID_HOST: ${GROUP_ID_HOST}
        PHP_VERSION: ${PHP_VERSION?}
        COMPOSER_VERSION: ${COMPOSER_VERSION?}
        XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY}
        APP_CODE_PATH_CONTAINER: ${APP_CODE_PATH_CONTAINER?}
    container_name: ${COMPOSE_PROJECT_NAME}-php-fpm
    volumes:
      - ${APP_CODE_PATH_HOST?}:${APP_CODE_PATH_CONTAINER?}
    networks:
      - network
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: ${RESTART:-no}

#
# Nginx server
#
  nginx:
    build:
      dockerfile: images/nginx/Dockerfile
      args:
        NGINX_VERSION: ${NGINX_VERSION?}
        APP_CODE_PATH_CONTAINER: ${APP_CODE_PATH_CONTAINER?}
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    volumes:
      - ${APP_CODE_PATH_HOST?}:${APP_CODE_PATH_CONTAINER?}
    ports:
      - "${NGINX_HOST_HTTP_PORT:-80}:80"
      - "${NGINX_HOST_HTTPS_PORT:-443}:443"
    networks:
      - network
    depends_on:
      - php-fpm
    restart: ${RESTART:-no}

#
#  Apache server
#
#  httpd:
#    build:
#      dockerfile: ./images/httpd/Dockerfile
#      args:
#        APP_CODE_PATH_CONTAINER: ${APP_CODE_PATH_CONTAINER?}
#        APP_HOST: ${APP_HOST}
#        HTTPD_HOST_HTTP_PORT: ${HTTPD_HOST_HTTP_PORT}
#        HTTPD_VERSION: ${HTTPD_VERSION}
#    container_name: httpd
#    volumes:
#      - ${APP_CODE_PATH_HOST?}:${APP_CODE_PATH_CONTAINER?}
#      - ${HTTPD_LOG_DIR?}:/logs/
#    ports:
#      - "${HTTPD_HOST_HTTP_PORT:-8080}:80"
#    networks:
#      network:
#        aliases:
#          - ${APP_HOST?}
#          - php_fpm
#    depends_on:
#      - php-fpm
#    restart: ${RESTART:-no}

#
#  MySQL server
#
#  mysql:
#    image: mysql:${MYSQL_VERSION?}
#    container_name: mysql
#    command: --innodb_file_per_table=1
#    platform: linux/amd64
#    environment:
#      - MYSQL_DATABASE=${MYSQL_DATABASE?}
#      - MYSQL_USER=${MYSQL_USER?}
#      - MYSQL_PASSWORD=${MYSQL_PASSWORD?}
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD?}
#      - TZ=${TIMEZONE:-UTC}
#    volumes:
#      - mysql:/var/lib/mysql
#    networks:
#      - network
#    ports:
#      - "${MYSQL_HOST_PORT:-3306}:3306"
#    restart: ${RESTART:-no}


#  MariaDB server

  mariadb:
    image: mariadb:${MARIADB_VERSION?}
    container_name: ${COMPOSE_PROJECT_NAME}-mariadb
    command: --innodb_file_per_table=1
    platform: linux/amd64
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE?}
      - MARIADB_USER=${MYSQL_USER?}
      - MARIADB_PASSWORD=${MYSQL_PASSWORD?}
      - MARIADB_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD?}
      - TZ=${TIMEZONE:-UTC}
    volumes:
      - mariadbsql:/var/lib/mysql
    networks:
      - network
    ports:
      - "${MARIADB_HOST_PORT:-3306}:3306"
    restart: ${RESTART:-no}


#  PhpMyAdmin - MySQL database admin
#
#  phpmyadmin:
#    image: phpmyadmin/phpmyadmin:${PHPMYADMIN_VERSION?}
#    container_name: phpmyadmin
#    links:
#      - mysql
#    environment:
#      PMA_HOST: mysql
#      PMA_PORT: ${MYSQL_HOST_PORT:-3306}
#    ports:
#      - "${PHPMYADMIN_HOST_HTTP_PORT:-8081}:80"
#    networks:
#      - network
#    depends_on:
#      - mysql
#    restart: ${RESTART:-no}

#
#  Elasticsearch
#
#  elasticsearch:
#    image: elasticsearch:${ELASTICSEARCH_VERSION?}
#    container_name: elasticsearch
#    environment:
#      - xpack.security.enabled=false
#      - discovery.type=single-node
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
#    networks:
#      - network
#    volumes:
#      - elasticsearch-data:/usr/share/elasticsearch/data
#    ports:
#      - "${ELASTICSEARCH_HOST_REST_PORT:-9200}:9200"
#      - "${ELASTICSEARCH_HOST_NODE_PORT:-9300}:9300"
#    restart: ${RESTART:-no}